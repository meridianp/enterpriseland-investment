# Generated by Django 5.2.3 on 2025-06-10 10:48

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('assessment_type', models.CharField(choices=[('PARTNER', 'Development Partner'), ('SCHEME', 'PBSA Scheme'), ('COMBINED', 'Combined Assessment')], max_length=20)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('IN_REVIEW', 'In Review'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('NEEDS_INFO', 'Needs Additional Info'), ('ARCHIVED', 'Archived')], default='DRAFT', max_length=20)),
                ('decision', models.CharField(blank=True, choices=[('Premium/Priority', 'Premium/Priority'), ('Acceptable', 'Acceptable'), ('Reject', 'Reject')], max_length=20)),
                ('total_score', models.IntegerField(blank=True, null=True)),
                ('version_major', models.IntegerField(default=1)),
                ('version_minor', models.IntegerField(default=0)),
                ('version_patch', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approved_assessments', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_assessments', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='accounts.group')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='updated_assessments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'assessments',
            },
        ),
        migrations.CreateModel(
            name='CreditInformation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('main_banking_relationship', models.CharField(blank=True, max_length=255)),
                ('amount_of_debt_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('amount_of_debt_currency', models.CharField(blank=True, choices=[('AED', 'United Arab Emirates dirham'), ('EUR', 'Euro'), ('GBP', 'British pound sterling'), ('SAR', 'Saudi riyal'), ('USD', 'United States dollar')], max_length=3, null=True)),
                ('debt_to_total_assets_pct', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('short_term_debt_pct', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('interest_coverage_ratio', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('debt_service_coverage_ratio', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('credit_rating', models.CharField(blank=True, max_length=10)),
                ('assessment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='credit_info', to='assessments.assessment')),
            ],
            options={
                'db_table': 'credit_information',
            },
        ),
        migrations.CreateModel(
            name='DevelopmentPartner',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=255)),
                ('trading_name', models.CharField(blank=True, max_length=255)),
                ('headquarter_city', models.CharField(blank=True, max_length=100)),
                ('headquarter_country', models.CharField(blank=True, max_length=2)),
                ('year_established', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1800), django.core.validators.MaxValueValidator(2025)])),
                ('website_url', models.URLField(blank=True)),
                ('size_of_development_team', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('number_of_employees', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('completed_pbsa_schemes', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('schemes_in_development', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('pbsa_schemes_in_development', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('completed_schemes_in_target_location', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('years_of_pbsa_experience', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_pbsa_beds_delivered', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('beds_in_development', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('shareholding_structure', models.TextField(blank=True)),
                ('ultimate_parent_company', models.CharField(blank=True, max_length=255)),
                ('publicly_listed', models.BooleanField(blank=True, null=True)),
                ('stock_exchange', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='development_partners', to='accounts.group')),
            ],
            options={
                'db_table': 'development_partners',
            },
        ),
        migrations.AddField(
            model_name='assessment',
            name='partner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='assessments.developmentpartner'),
        ),
        migrations.CreateModel(
            name='FinancialInformation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('net_assets_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('net_assets_currency', models.CharField(blank=True, choices=[('AED', 'United Arab Emirates dirham'), ('EUR', 'Euro'), ('GBP', 'British pound sterling'), ('SAR', 'Saudi riyal'), ('USD', 'United States dollar')], max_length=3, null=True)),
                ('net_current_assets_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('net_current_assets_currency', models.CharField(blank=True, choices=[('AED', 'United Arab Emirates dirham'), ('EUR', 'Euro'), ('GBP', 'British pound sterling'), ('SAR', 'Saudi riyal'), ('USD', 'United States dollar')], max_length=3, null=True)),
                ('net_profit_before_tax_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('net_profit_before_tax_currency', models.CharField(blank=True, choices=[('AED', 'United Arab Emirates dirham'), ('EUR', 'Euro'), ('GBP', 'British pound sterling'), ('SAR', 'Saudi riyal'), ('USD', 'United States dollar')], max_length=3, null=True)),
                ('latest_annual_revenue_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('latest_annual_revenue_currency', models.CharField(blank=True, choices=[('AED', 'United Arab Emirates dirham'), ('EUR', 'Euro'), ('GBP', 'British pound sterling'), ('SAR', 'Saudi riyal'), ('USD', 'United States dollar')], max_length=3, null=True)),
                ('ebitda_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('ebitda_currency', models.CharField(blank=True, choices=[('AED', 'United Arab Emirates dirham'), ('EUR', 'Euro'), ('GBP', 'British pound sterling'), ('SAR', 'Saudi riyal'), ('USD', 'United States dollar')], max_length=3, null=True)),
                ('financial_year_end_date', models.DateField(blank=True, null=True)),
                ('assessment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='financial_info', to='assessments.assessment')),
            ],
            options={
                'db_table': 'financial_information',
            },
        ),
        migrations.CreateModel(
            name='FinancialPartner',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('relationship_type', models.CharField(choices=[('equity', 'Equity Partner'), ('debt', 'Debt Provider'), ('joint_venture', 'Joint Venture'), ('other', 'Other')], max_length=50)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='financial_partners', to='assessments.developmentpartner')),
            ],
            options={
                'db_table': 'financial_partners',
            },
        ),
        migrations.CreateModel(
            name='FXRate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('base_currency', models.CharField(choices=[('AED', 'United Arab Emirates dirham'), ('EUR', 'Euro'), ('GBP', 'British pound sterling'), ('SAR', 'Saudi riyal'), ('USD', 'United States dollar')], max_length=3)),
                ('target_currency', models.CharField(choices=[('AED', 'United Arab Emirates dirham'), ('EUR', 'Euro'), ('GBP', 'British pound sterling'), ('SAR', 'Saudi riyal'), ('USD', 'United States dollar')], max_length=3)),
                ('rate', models.DecimalField(decimal_places=6, max_digits=10)),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'fx_rates',
                'unique_together': {('base_currency', 'target_currency', 'date')},
            },
        ),
        migrations.CreateModel(
            name='KeyShareholder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('ownership_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='key_shareholders', to='assessments.developmentpartner')),
            ],
            options={
                'db_table': 'key_shareholders',
            },
        ),
        migrations.CreateModel(
            name='OfficeLocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=2)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='office_locations', to='assessments.developmentpartner')),
            ],
            options={
                'db_table': 'office_locations',
            },
        ),
        migrations.CreateModel(
            name='PBSAScheme',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('scheme_name', models.CharField(max_length=255)),
                ('location_city', models.CharField(max_length=100)),
                ('location_country', models.CharField(max_length=2)),
                ('total_beds', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('site_area_value', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('site_area_unit', models.CharField(choices=[('SQ_FT', 'Square Feet'), ('SQ_M', 'Square Meters')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pbsa_schemes', to='accounts.group')),
            ],
            options={
                'db_table': 'pbsa_schemes',
            },
        ),
        migrations.AddField(
            model_name='assessment',
            name='scheme',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='assessments.pbsascheme'),
        ),
        migrations.CreateModel(
            name='AssessmentMetric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric_name', models.CharField(max_length=100)),
                ('score', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('weight', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('justification', models.TextField(blank=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='assessments.assessment')),
            ],
            options={
                'db_table': 'assessment_metrics',
                'unique_together': {('assessment', 'metric_name')},
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('table_name', models.CharField(max_length=100)),
                ('record_id', models.UUIDField()),
                ('action', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete')], max_length=10)),
                ('old_values', models.JSONField(blank=True, null=True)),
                ('new_values', models.JSONField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'audit_log',
                'indexes': [models.Index(fields=['timestamp'], name='audit_log_timesta_e8e14e_idx'), models.Index(fields=['table_name', 'record_id'], name='audit_log_table_n_38ccfb_idx'), models.Index(fields=['user'], name='audit_log_user_id_4dac76_idx')],
            },
        ),
    ]
