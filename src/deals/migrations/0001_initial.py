# Generated by Django 4.2.7 on 2025-06-27 18:33

from decimal import Decimal
from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_fsm
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('market_intelligence', '0001_initial'),
        ('leads', '0002_add_geographic_intelligence'),
        ('files', '0001_initial'),
        ('contacts', '0005_add_outreach_sequence_models'),
        ('assessments', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DealRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('permissions', models.JSONField(default=list, help_text='List of permission codes')),
                ('is_required', models.BooleanField(default=False, help_text='Is this role required for all deals?')),
                ('max_members', models.PositiveIntegerField(blank=True, help_text='Maximum members with this role per deal', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('group', models.ForeignKey(help_text='Group this record belongs to for multi-tenant access control', on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
            ],
            options={
                'verbose_name': 'Deal Role',
                'verbose_name_plural': 'Deal Roles',
                'db_table': 'deal_roles',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DealStage',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=50)),
                ('stage_type', models.CharField(choices=[('origination', 'Origination'), ('screening', 'Screening'), ('analysis', 'Analysis'), ('approval', 'Approval'), ('execution', 'Execution'), ('closing', 'Closing'), ('post_closing', 'Post-Closing')], max_length=20)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order in workflow')),
                ('description', models.TextField(blank=True)),
                ('required_documents', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, help_text='Required document types', size=None)),
                ('required_approvals', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, help_text='Required approval roles', size=None)),
                ('required_tasks', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, help_text='Tasks that must be completed', size=None)),
                ('target_duration_days', models.PositiveIntegerField(blank=True, help_text='Target days to complete stage', null=True)),
                ('max_duration_days', models.PositiveIntegerField(blank=True, help_text='Maximum days before escalation', null=True)),
                ('allowed_roles', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, help_text='Roles that can work in this stage', size=None)),
                ('approval_roles', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, help_text='Roles that can approve progression', size=None)),
                ('entry_criteria', models.JSONField(blank=True, default=dict, help_text='Conditions to enter stage')),
                ('exit_criteria', models.JSONField(blank=True, default=dict, help_text='Conditions to exit stage')),
                ('automation_rules', models.JSONField(blank=True, default=dict, help_text='Automation configuration')),
                ('group', models.ForeignKey(help_text='Group this record belongs to for multi-tenant access control', on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
            ],
            options={
                'verbose_name': 'Deal Stage',
                'verbose_name_plural': 'Deal Stages',
                'db_table': 'deal_stages',
                'ordering': ['workflow_template', 'order'],
            },
        ),
        migrations.CreateModel(
            name='DealType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
                ('configuration', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('group', models.ForeignKey(help_text='Group this record belongs to for multi-tenant access control', on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
            ],
            options={
                'db_table': 'deal_types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WorkflowTemplate',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_default', models.BooleanField(default=False, help_text='Default template for this deal type')),
                ('is_active', models.BooleanField(default=True)),
                ('configuration', models.JSONField(default=dict, help_text='Workflow configuration and rules')),
                ('deal_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflow_templates', to='deals.dealtype')),
                ('group', models.ForeignKey(help_text='Group this record belongs to for multi-tenant access control', on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
            ],
            options={
                'verbose_name': 'Workflow Template',
                'verbose_name_plural': 'Workflow Templates',
                'db_table': 'workflow_templates',
                'ordering': ['name'],
                'unique_together': {('group', 'deal_type', 'is_default')},
            },
        ),
        migrations.CreateModel(
            name='MilestoneTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('days_from_stage_start', models.IntegerField(blank=True, help_text='Days after stage start (negative for before)', null=True)),
                ('is_blocking', models.BooleanField(default=False, help_text='Must be completed before stage progression')),
                ('required_documents', models.JSONField(blank=True, default=list, help_text='Documents required for milestone')),
                ('checklist_items', models.JSONField(blank=True, default=list, help_text='Checklist for milestone completion')),
                ('is_active', models.BooleanField(default=True)),
                ('deal_types', models.ManyToManyField(blank=True, help_text='Deal types this template applies to', to='deals.dealtype')),
                ('group', models.ForeignKey(help_text='Group this record belongs to for multi-tenant access control', on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
                ('stage', models.ForeignKey(blank=True, help_text='Stage when this milestone typically occurs', null=True, on_delete=django.db.models.deletion.SET_NULL, to='deals.dealstage')),
            ],
            options={
                'verbose_name': 'Milestone Template',
                'verbose_name_plural': 'Milestone Templates',
                'db_table': 'milestone_templates',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='dealstage',
            name='workflow_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='deals.workflowtemplate'),
        ),
        migrations.CreateModel(
            name='DealSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('group', models.ForeignKey(help_text='Group this record belongs to for multi-tenant access control', on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
            ],
            options={
                'db_table': 'deal_sources',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Deal name or project name', max_length=200)),
                ('code', models.CharField(help_text='Unique deal code (e.g., 2024-EQ-001)', max_length=50, unique=True)),
                ('description', models.TextField(blank=True, help_text='Deal overview and investment thesis')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('status', django_fsm.FSMField(choices=[('pipeline', 'Pipeline'), ('initial_review', 'Initial Review'), ('due_diligence', 'Due Diligence'), ('negotiation', 'Negotiation'), ('documentation', 'Documentation'), ('closing', 'Closing'), ('completed', 'Completed'), ('rejected', 'Rejected'), ('on_hold', 'On Hold'), ('withdrawn', 'Withdrawn')], default='pipeline', max_length=20, protected=True)),
                ('stage_entered_at', models.DateTimeField(blank=True, help_text='When the deal entered current stage', null=True)),
                ('deal_size', models.DecimalField(blank=True, decimal_places=2, help_text='Total deal size in base currency', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('investment_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Our investment amount', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('pre_money_valuation', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('post_money_valuation', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('ownership_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('currency', models.CharField(default='USD', help_text='ISO 4217 currency code', max_length=3)),
                ('origination_date', models.DateField(default=django.utils.timezone.now, help_text='When the deal was originated')),
                ('expected_close_date', models.DateField(blank=True, help_text='Expected closing date', null=True)),
                ('actual_close_date', models.DateField(blank=True, help_text='Actual closing date', null=True)),
                ('sector', models.CharField(blank=True, max_length=100)),
                ('geography', models.CharField(blank=True, max_length=100)),
                ('investment_thesis', models.TextField(blank=True)),
                ('key_risks', models.TextField(blank=True)),
                ('exit_strategy', models.TextField(blank=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('custom_fields', models.JSONField(blank=True, default=dict)),
                ('irr_target', models.DecimalField(blank=True, decimal_places=2, help_text='Target IRR percentage', max_digits=5, null=True)),
                ('multiple_target', models.DecimalField(blank=True, decimal_places=2, help_text='Target multiple (e.g., 2.5x)', max_digits=5, null=True)),
                ('assessment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deals', to='assessments.assessment')),
                ('current_stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_deals', to='deals.dealstage')),
                ('deal_lead', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_deals', to=settings.AUTH_USER_MODEL)),
                ('deal_source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='deals', to='deals.dealsource')),
                ('deal_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='deals', to='deals.dealtype')),
                ('group', models.ForeignKey(help_text='Group this record belongs to for multi-tenant access control', on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deals', to='leads.lead')),
                ('originator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='originated_deals', to=settings.AUTH_USER_MODEL)),
                ('primary_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_deals', to='contacts.contact')),
                ('target_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deals', to='market_intelligence.targetcompany')),
            ],
            options={
                'verbose_name': 'Deal',
                'verbose_name_plural': 'Deals',
                'db_table': 'deals',
                'ordering': ['-created_at'],
                'permissions': [('view_all_deals', 'Can view all deals in group'), ('approve_deals', 'Can approve deal progression'), ('export_deals', 'Can export deal data')],
            },
        ),
        migrations.CreateModel(
            name='DealTransition',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('from_status', models.CharField(help_text='Deal status before transition', max_length=20)),
                ('to_status', models.CharField(help_text='Deal status after transition', max_length=20)),
                ('performed_at', models.DateTimeField(auto_now_add=True)),
                ('reason', models.TextField(blank=True, help_text='Reason for transition')),
                ('notes', models.TextField(blank=True)),
                ('criteria_met', models.JSONField(default=dict, help_text='Which criteria were met')),
                ('overrides', models.JSONField(blank=True, default=dict, help_text='Any overridden requirements')),
                ('stage_duration_days', models.PositiveIntegerField(blank=True, help_text='Days spent in previous stage', null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_transitions', to=settings.AUTH_USER_MODEL)),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transitions', to='deals.deal')),
                ('from_stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transitions_from', to='deals.dealstage')),
                ('group', models.ForeignKey(help_text='Group this record belongs to for multi-tenant access control', on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deal_transitions', to=settings.AUTH_USER_MODEL)),
                ('to_stage', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transitions_to', to='deals.dealstage')),
            ],
            options={
                'verbose_name': 'Deal Transition',
                'verbose_name_plural': 'Deal Transitions',
                'db_table': 'deal_transitions',
                'ordering': ['-performed_at'],
                'indexes': [models.Index(fields=['deal', '-performed_at'], name='deal_transi_deal_id_6a8be5_idx')],
            },
        ),
        migrations.CreateModel(
            name='DealTeamMember',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('involvement_level', models.CharField(choices=[('lead', 'Lead'), ('core', 'Core Team'), ('support', 'Support'), ('reviewer', 'Reviewer'), ('observer', 'Observer')], default='core', max_length=20)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('removed_at', models.DateTimeField(blank=True, help_text='When member was removed from deal', null=True)),
                ('responsibilities', models.TextField(blank=True, help_text='Specific responsibilities for this deal')),
                ('allocation_percentage', models.PositiveIntegerField(default=100, help_text='Percentage of time allocated to this deal')),
                ('can_edit', models.BooleanField(default=True, help_text='Can edit deal information')),
                ('can_approve', models.BooleanField(default=False, help_text='Can approve stage transitions')),
                ('can_view_confidential', models.BooleanField(default=True, help_text='Can view confidential information')),
                ('notify_on_updates', models.BooleanField(default=True, help_text='Receive notifications for deal updates')),
                ('notify_on_stage_change', models.BooleanField(default=True, help_text='Receive notifications for stage changes')),
                ('tasks_assigned', models.PositiveIntegerField(default=0)),
                ('tasks_completed', models.PositiveIntegerField(default=0)),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deal_assignments_made', to=settings.AUTH_USER_MODEL)),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='deals.deal')),
                ('group', models.ForeignKey(help_text='Group this record belongs to for multi-tenant access control', on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assignments', to='deals.dealrole')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deal_assignments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Deal Team Member',
                'verbose_name_plural': 'Deal Team Members',
                'db_table': 'deal_team_members',
                'ordering': ['deal', 'involvement_level', 'role'],
                'indexes': [models.Index(fields=['deal', 'user'], name='deal_team_m_deal_id_97b7e6_idx'), models.Index(fields=['user', 'removed_at'], name='deal_team_m_user_id_69e922_idx')],
                'unique_together': {('deal', 'user', 'role')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='dealstage',
            unique_together={('workflow_template', 'code')},
        ),
        migrations.CreateModel(
            name='DealMilestone',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('due_date', models.DateField()),
                ('reminder_date', models.DateField(blank=True, help_text='When to send reminder', null=True)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('is_blocking', models.BooleanField(default=False, help_text='Blocks stage progression if not completed')),
                ('progress_percentage', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('checklist_items', models.JSONField(blank=True, default=list, help_text='Checklist for completion')),
                ('completed_items', models.JSONField(blank=True, default=list, help_text='Completed checklist items')),
                ('required_documents', models.JSONField(blank=True, default=list)),
                ('completion_notes', models.TextField(blank=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('overdue_notification_sent', models.BooleanField(default=False)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_milestones', to=settings.AUTH_USER_MODEL)),
                ('attached_documents', models.ManyToManyField(blank=True, related_name='milestone_documents', to='files.fileattachment')),
                ('completed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='completed_milestones', to=settings.AUTH_USER_MODEL)),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='deals.deal')),
                ('group', models.ForeignKey(help_text='Group this record belongs to for multi-tenant access control', on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
                ('stage', models.ForeignKey(blank=True, help_text='Related deal stage', null=True, on_delete=django.db.models.deletion.SET_NULL, to='deals.dealstage')),
                ('template', models.ForeignKey(blank=True, help_text='Template this was created from', null=True, on_delete=django.db.models.deletion.SET_NULL, to='deals.milestonetemplate')),
            ],
            options={
                'verbose_name': 'Deal Milestone',
                'verbose_name_plural': 'Deal Milestones',
                'db_table': 'deal_milestones',
                'ordering': ['deal', 'due_date'],
                'indexes': [models.Index(fields=['deal', 'status'], name='deal_milest_deal_id_08e5f3_idx'), models.Index(fields=['due_date', 'status'], name='deal_milest_due_dat_c20ac7_idx'), models.Index(fields=['assigned_to', 'status'], name='deal_milest_assigne_0c6448_idx')],
            },
        ),
        migrations.CreateModel(
            name='DealActivity',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('deal_created', 'Deal Created'), ('stage_changed', 'Stage Changed'), ('status_updated', 'Status Updated'), ('deal_completed', 'Deal Completed'), ('deal_rejected', 'Deal Rejected'), ('team_member_added', 'Team Member Added'), ('team_member_removed', 'Team Member Removed'), ('role_changed', 'Role Changed'), ('team_change', 'Team Change'), ('milestone_created', 'Milestone Created'), ('milestone_updated', 'Milestone Updated'), ('milestone_completed', 'Milestone Completed'), ('milestone_overdue', 'Milestone Overdue'), ('document_uploaded', 'Document Uploaded'), ('document_reviewed', 'Document Reviewed'), ('document_approved', 'Document Approved'), ('document_rejected', 'Document Rejected'), ('valuation_updated', 'Valuation Updated'), ('terms_updated', 'Terms Updated'), ('financial_model_updated', 'Financial Model Updated'), ('note_added', 'Note Added'), ('email_sent', 'Email Sent'), ('meeting_scheduled', 'Meeting Scheduled'), ('meeting_completed', 'Meeting Completed'), ('call_logged', 'Call Logged'), ('review_requested', 'Review Requested'), ('review_completed', 'Review Completed'), ('approval_requested', 'Approval Requested'), ('approval_granted', 'Approval Granted'), ('approval_denied', 'Approval Denied'), ('custom', 'Custom Activity'), ('system', 'System Activity')], max_length=50)),
                ('title', models.CharField(blank=True, help_text='Activity title (auto-generated if blank)', max_length=200)),
                ('description', models.TextField()),
                ('object_id', models.UUIDField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional activity data')),
                ('is_important', models.BooleanField(default=False, help_text='Mark important activities')),
                ('is_private', models.BooleanField(default=False, help_text='Only visible to specific roles')),
                ('notify_team', models.BooleanField(default=True, help_text='Notify deal team members')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='deals.deal')),
                ('group', models.ForeignKey(help_text='Group this record belongs to for multi-tenant access control', on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
                ('notified_users', models.ManyToManyField(blank=True, related_name='activity_notifications', to=settings.AUTH_USER_MODEL)),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deal_activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Deal Activity',
                'verbose_name_plural': 'Deal Activities',
                'db_table': 'deal_activities',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['deal', '-created_at'], name='deal_activi_deal_id_cc4e4c_idx'), models.Index(fields=['activity_type', '-created_at'], name='deal_activi_activit_ed0a3c_idx'), models.Index(fields=['performed_by', '-created_at'], name='deal_activi_perform_f07ab9_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='deal',
            index=models.Index(fields=['group', 'status'], name='deals_group_i_e17c21_idx'),
        ),
        migrations.AddIndex(
            model_name='deal',
            index=models.Index(fields=['group', 'deal_lead'], name='deals_group_i_6be639_idx'),
        ),
        migrations.AddIndex(
            model_name='deal',
            index=models.Index(fields=['group', 'expected_close_date'], name='deals_group_i_19ed9a_idx'),
        ),
        migrations.AddIndex(
            model_name='deal',
            index=models.Index(fields=['code'], name='deals_code_0b64a5_idx'),
        ),
    ]
