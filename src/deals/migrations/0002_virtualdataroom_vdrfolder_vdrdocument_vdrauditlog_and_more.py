# Generated by Django 4.2.7 on 2025-06-27 19:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('files', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('accounts', '0002_initial'),
        ('deals', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='VirtualDataRoom',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('setup', 'Setup'), ('active', 'Active'), ('locked', 'Locked'), ('archived', 'Archived'), ('expired', 'Expired')], default='setup', max_length=20)),
                ('password_protected', models.BooleanField(default=False)),
                ('password_hash', models.CharField(blank=True, max_length=128)),
                ('ip_restrictions', models.JSONField(blank=True, default=list, help_text='List of allowed IP addresses/ranges')),
                ('track_downloads', models.BooleanField(default=True)),
                ('track_views', models.BooleanField(default=True)),
                ('watermark_documents', models.BooleanField(default=True)),
                ('disable_printing', models.BooleanField(default=True)),
                ('disable_screenshots', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When VDR access expires', null=True)),
                ('auto_extend_expiry', models.BooleanField(default=False)),
                ('notify_on_access', models.BooleanField(default=True)),
                ('notify_on_download', models.BooleanField(default=True)),
                ('administrators', models.ManyToManyField(help_text='Users who can manage VDR settings and permissions', related_name='administered_vdrs', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_vdrs', to=settings.AUTH_USER_MODEL)),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_rooms', to='deals.deal')),
                ('group', models.ForeignKey(help_text='Group this record belongs to for multi-tenant access control', on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
                ('notification_recipients', models.ManyToManyField(blank=True, help_text='Users to notify of VDR activity', related_name='vdr_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Virtual Data Room',
                'verbose_name_plural': 'Virtual Data Rooms',
                'db_table': 'vdr_data_rooms',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VDRFolder',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('restricted_access', models.BooleanField(default=False, help_text='Requires special permission to access')),
                ('access_roles', models.JSONField(blank=True, default=list, help_text='Roles that can access this restricted folder')),
                ('data_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='folders', to='deals.virtualdataroom')),
                ('group', models.ForeignKey(help_text='Group this record belongs to for multi-tenant access control', on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subfolders', to='deals.vdrfolder')),
            ],
            options={
                'verbose_name': 'VDR Folder',
                'verbose_name_plural': 'VDR Folders',
                'db_table': 'vdr_folders',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='VDRDocument',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('file_size', models.BigIntegerField(help_text='File size in bytes')),
                ('file_type', models.CharField(max_length=50)),
                ('version', models.PositiveIntegerField(default=1)),
                ('checksum', models.CharField(help_text='SHA-256 checksum', max_length=64)),
                ('status', models.CharField(choices=[('uploading', 'Uploading'), ('processing', 'Processing'), ('active', 'Active'), ('hidden', 'Hidden'), ('archived', 'Archived')], default='uploading', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('upload_completed_at', models.DateTimeField(blank=True, null=True)),
                ('restricted_access', models.BooleanField(default=False)),
                ('access_roles', models.JSONField(blank=True, default=list, help_text='Roles that can access this document')),
                ('is_current_version', models.BooleanField(default=True)),
                ('file_attachment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vdr_documents', to='files.fileattachment')),
                ('folder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='deals.vdrfolder')),
                ('group', models.ForeignKey(help_text='Group this record belongs to for multi-tenant access control', on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='newer_versions', to='deals.vdrdocument')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_vdr_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'VDR Document',
                'verbose_name_plural': 'VDR Documents',
                'db_table': 'vdr_documents',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='VDRAuditLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('view_document', 'View Document'), ('download_document', 'Download Document'), ('upload_document', 'Upload Document'), ('delete_document', 'Delete Document'), ('view_folder', 'View Folder'), ('create_folder', 'Create Folder'), ('grant_access', 'Grant Access'), ('revoke_access', 'Revoke Access'), ('modify_permissions', 'Modify Permissions'), ('change_settings', 'Change Settings'), ('failed_access', 'Failed Access Attempt')], max_length=30)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('data_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='deals.virtualdataroom')),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to='deals.vdrdocument')),
                ('folder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to='deals.vdrfolder')),
                ('group', models.ForeignKey(help_text='Group this record belongs to for multi-tenant access control', on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vdr_audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'VDR Audit Log',
                'verbose_name_plural': 'VDR Audit Logs',
                'db_table': 'vdr_audit_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VDRAccess',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('access_type', models.CharField(choices=[('invited', 'Invited'), ('granted', 'Granted'), ('revoked', 'Revoked'), ('expired', 'Expired')], default='invited', max_length=20)),
                ('access_level', models.CharField(choices=[('full', 'Full Access'), ('limited', 'Limited Access'), ('read_only', 'Read Only'), ('preview_only', 'Preview Only')], default='read_only', max_length=20)),
                ('can_download', models.BooleanField(default=False)),
                ('can_upload', models.BooleanField(default=False)),
                ('can_comment', models.BooleanField(default=True)),
                ('can_view_audit_log', models.BooleanField(default=False)),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('revoked_at', models.DateTimeField(blank=True, null=True)),
                ('invitation_email', models.EmailField(blank=True, max_length=254)),
                ('invitation_message', models.TextField(blank=True)),
                ('invitation_accepted_at', models.DateTimeField(blank=True, null=True)),
                ('accessible_folders', models.ManyToManyField(blank=True, help_text='Specific folders this user can access (if restricted)', to='deals.vdrfolder')),
                ('data_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_records', to='deals.virtualdataroom')),
                ('granted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='granted_vdr_access', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(help_text='Group this record belongs to for multi-tenant access control', on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
                ('revoked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revoked_vdr_access', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vdr_access', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'VDR Access',
                'verbose_name_plural': 'VDR Access Records',
                'db_table': 'vdr_access',
                'ordering': ['-granted_at'],
            },
        ),
        migrations.CreateModel(
            name='DealNotification',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('comment_mention', 'Mentioned in Comment'), ('comment_reply', 'Reply to Comment'), ('discussion_invite', 'Discussion Invitation'), ('milestone_due', 'Milestone Due'), ('milestone_overdue', 'Milestone Overdue'), ('stage_change', 'Stage Changed'), ('team_assignment', 'Team Assignment'), ('approval_request', 'Approval Required'), ('deal_update', 'Deal Updated')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('object_id', models.UUIDField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('is_dismissed', models.BooleanField(default=False)),
                ('dismissed_at', models.DateTimeField(blank=True, null=True)),
                ('action_url', models.CharField(blank=True, max_length=500)),
                ('action_text', models.CharField(blank=True, max_length=100)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='deals.deal')),
                ('group', models.ForeignKey(help_text='Group this record belongs to for multi-tenant access control', on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deal_notifications', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_deal_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Deal Notification',
                'verbose_name_plural': 'Deal Notifications',
                'db_table': 'deal_notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DealDiscussion',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('discussion_type', models.CharField(choices=[('general', 'General Discussion'), ('valuation', 'Valuation Discussion'), ('terms', 'Terms Discussion'), ('diligence', 'Due Diligence'), ('risk', 'Risk Assessment'), ('decision', 'Decision Required')], default='general', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('resolved', 'Resolved'), ('archived', 'Archived'), ('escalated', 'Escalated')], default='active', max_length=20)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_summary', models.TextField(blank=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('due_date', models.DateTimeField(blank=True, help_text='When this discussion needs resolution', null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_discussions', to=settings.AUTH_USER_MODEL)),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discussions', to='deals.deal')),
                ('group', models.ForeignKey(help_text='Group this record belongs to for multi-tenant access control', on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
                ('participants', models.ManyToManyField(blank=True, help_text='Users participating in this discussion', related_name='deal_discussions', to=settings.AUTH_USER_MODEL)),
                ('related_milestone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='discussions', to='deals.dealmilestone')),
                ('related_stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='discussions', to='deals.dealstage')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_discussions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Deal Discussion',
                'verbose_name_plural': 'Deal Discussions',
                'db_table': 'deal_discussions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DealComment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.UUIDField(blank=True, help_text='ID of the object this comment is attached to', null=True)),
                ('comment_type', models.CharField(choices=[('general', 'General Comment'), ('question', 'Question'), ('concern', 'Concern'), ('approval', 'Approval'), ('rejection', 'Rejection'), ('update', 'Status Update')], default='general', max_length=20)),
                ('content', models.TextField(help_text='Comment content with markdown support')),
                ('is_private', models.BooleanField(default=False, help_text='Only visible to specific team members')),
                ('is_resolved', models.BooleanField(default=False, help_text='For questions/concerns - marked as resolved')),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('edit_count', models.PositiveIntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deal_comments', to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(blank=True, help_text='Type of object this comment is attached to', null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='deals.deal')),
                ('group', models.ForeignKey(help_text='Group this record belongs to for multi-tenant access control', on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
                ('mentioned_users', models.ManyToManyField(blank=True, help_text='Users mentioned in this comment', related_name='mentioned_in_comments', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='deals.dealcomment')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Deal Comment',
                'verbose_name_plural': 'Deal Comments',
                'db_table': 'deal_comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='virtualdataroom',
            index=models.Index(fields=['deal', 'status'], name='vdr_data_ro_deal_id_539f24_idx'),
        ),
        migrations.AddIndex(
            model_name='virtualdataroom',
            index=models.Index(fields=['status', '-created_at'], name='vdr_data_ro_status_ad9e6c_idx'),
        ),
        migrations.AddIndex(
            model_name='vdrfolder',
            index=models.Index(fields=['data_room', 'parent'], name='vdr_folders_data_ro_2f6129_idx'),
        ),
        migrations.AddIndex(
            model_name='vdrfolder',
            index=models.Index(fields=['data_room', 'order'], name='vdr_folders_data_ro_df4e8a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='vdrfolder',
            unique_together={('data_room', 'parent', 'name')},
        ),
        migrations.AddIndex(
            model_name='vdrdocument',
            index=models.Index(fields=['folder', 'status'], name='vdr_documen_folder__d5ac79_idx'),
        ),
        migrations.AddIndex(
            model_name='vdrdocument',
            index=models.Index(fields=['folder', 'order'], name='vdr_documen_folder__6e3fff_idx'),
        ),
        migrations.AddIndex(
            model_name='vdrdocument',
            index=models.Index(fields=['uploaded_by', '-created_at'], name='vdr_documen_uploade_2adaf9_idx'),
        ),
        migrations.AddIndex(
            model_name='vdrdocument',
            index=models.Index(fields=['is_current_version', 'status'], name='vdr_documen_is_curr_d005ac_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='vdrdocument',
            unique_together={('folder', 'name', 'is_current_version')},
        ),
        migrations.AddIndex(
            model_name='vdrauditlog',
            index=models.Index(fields=['data_room', '-created_at'], name='vdr_audit_l_data_ro_82bb44_idx'),
        ),
        migrations.AddIndex(
            model_name='vdrauditlog',
            index=models.Index(fields=['user', '-created_at'], name='vdr_audit_l_user_id_bd77db_idx'),
        ),
        migrations.AddIndex(
            model_name='vdrauditlog',
            index=models.Index(fields=['action_type', '-created_at'], name='vdr_audit_l_action__83cd98_idx'),
        ),
        migrations.AddIndex(
            model_name='vdrauditlog',
            index=models.Index(fields=['document', '-created_at'], name='vdr_audit_l_documen_48ccd3_idx'),
        ),
        migrations.AddIndex(
            model_name='vdraccess',
            index=models.Index(fields=['data_room', 'access_type'], name='vdr_access_data_ro_c6bf48_idx'),
        ),
        migrations.AddIndex(
            model_name='vdraccess',
            index=models.Index(fields=['user', 'access_type'], name='vdr_access_user_id_66b801_idx'),
        ),
        migrations.AddIndex(
            model_name='vdraccess',
            index=models.Index(fields=['expires_at'], name='vdr_access_expires_e30bfc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='vdraccess',
            unique_together={('data_room', 'user')},
        ),
        migrations.AddIndex(
            model_name='dealnotification',
            index=models.Index(fields=['recipient', 'is_read', '-created_at'], name='deal_notifi_recipie_04fb7c_idx'),
        ),
        migrations.AddIndex(
            model_name='dealnotification',
            index=models.Index(fields=['deal', '-created_at'], name='deal_notifi_deal_id_683b47_idx'),
        ),
        migrations.AddIndex(
            model_name='dealnotification',
            index=models.Index(fields=['notification_type', '-created_at'], name='deal_notifi_notific_25134a_idx'),
        ),
        migrations.AddIndex(
            model_name='dealdiscussion',
            index=models.Index(fields=['deal', 'status'], name='deal_discus_deal_id_979738_idx'),
        ),
        migrations.AddIndex(
            model_name='dealdiscussion',
            index=models.Index(fields=['deal', '-created_at'], name='deal_discus_deal_id_640501_idx'),
        ),
        migrations.AddIndex(
            model_name='dealdiscussion',
            index=models.Index(fields=['discussion_type', 'status'], name='deal_discus_discuss_280156_idx'),
        ),
        migrations.AddIndex(
            model_name='dealdiscussion',
            index=models.Index(fields=['due_date'], name='deal_discus_due_dat_ed5751_idx'),
        ),
        migrations.AddIndex(
            model_name='dealcomment',
            index=models.Index(fields=['deal', '-created_at'], name='deal_commen_deal_id_2dcf7b_idx'),
        ),
        migrations.AddIndex(
            model_name='dealcomment',
            index=models.Index(fields=['author', '-created_at'], name='deal_commen_author__ffeb2d_idx'),
        ),
        migrations.AddIndex(
            model_name='dealcomment',
            index=models.Index(fields=['content_type', 'object_id'], name='deal_commen_content_0e84ec_idx'),
        ),
        migrations.AddIndex(
            model_name='dealcomment',
            index=models.Index(fields=['parent', '-created_at'], name='deal_commen_parent__9db554_idx'),
        ),
    ]
